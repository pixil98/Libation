# docker.yml
# Reusable workflow that builds a docker image for Libation.
---
name: docker

on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'Version number'
        required: true
      release:
        type: boolean
        description: 'Is this a release build?'
        required: true
    secrets:
      docker_username:
        required: true
      docker_token:
        required: true

env:
  REGISTRY_IMAGE: ${{ secrets.docker_username }}/libation

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      # Prevent a failure in one image from stopping the other builds
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
        platform:
          - amd64
          - arm64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_token }}

      - name: Generate docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            name=${{ env.REGISTRY_IMAGE }}

      - name: Build and push by digest 
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            TARGETARCH=${{ matrix.platform }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=${{ inputs.release }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-linux-${{ matrix.platform }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    if: ${{ inputs.release }}
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          images: |
            name=${{ secrets.docker_username }}/libation
          tags: |
            type=raw,value=${{ inputs.version }},enable=${{ inputs.release }}


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_token }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
